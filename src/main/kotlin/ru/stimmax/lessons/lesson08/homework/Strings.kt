package ru.stimmax.ru.stimmax.lessons.lesson08.homework

fun main() {
    replaceStrings("Это невозможно выполнить за один день")
    extractDate("Пользователь вошел в систему -> 2021-12-01 09:48:23")
    maskCard( "4539 1488 0343 6467")
    formatAdress("username@example.com")
    extractFileName("C:/Пользователи/Документы/report.txt")
    createAbbriviation("Котлин лучший язык программирования")
}
// 1. Преобразование строк
//Создайте функцию, которая будет анализировать входящие фразы и применять к ним различные преобразования, делая текст
// более ироничным или забавным. Функция должна уметь распознавать ключевые слова или условия и соответственно изменять фразу.
//
//Правила проверки и преобразования:
//
//Если фраза содержит слово "невозможно":
//Преобразование: Замените "невозможно" на "совершенно точно возможно, просто требует времени".
//Если фраза начинается с "Я не уверен":
//Преобразование: Добавьте в конец фразы ", но моя интуиция говорит об обратном".
//Если фраза содержит слово "катастрофа":
//Преобразование: Замените "катастрофа" на "интересное событие".
//Если фраза заканчивается на "без проблем":
//Преобразование: Замените "без проблем" на "с парой интересных вызовов на пути".
//Если фраза содержит только одно слово:
//Преобразование: Добавьте перед словом "Иногда," и после слова ", но не всегда".
//Примеры Тестовых Фраз:
//
//"Это невозможно выполнить за один день"
//"Я не уверен в успехе этого проекта"
//"Произошла катастрофа на сервере"
//"Этот код работает без проблем"
//"Удача"

fun replaceStrings(arg: String) {
    val result = when {
        arg.contains("невозможно") -> arg.replace("невозможно", "совершенно точно возможно, просто требует времени")
        arg.startsWith("Я не уверен") -> "${arg} , но моя интуиция говорит об обратном"
        arg.contains("катастрофа") -> arg.replace("катастрофа", "интересное событие")
        arg.endsWith("без проблем") -> arg.replace("без проблем", "с парой интересных вызовов на пути")
        arg.contains("Удача") -> "Иногда, ${arg}, но не всегда"
        else -> "Nothing"
    }
    println(result)
}


//2. Извлечение даты из строки лога
//У вас есть строка лога, например "Пользователь вошел в систему -> 2021-12-01 09:48:23" (данные могут быть любыми, но
// формат всегда такой). Извлеките отдельно дату и время из этой строки и сразу распечатай их по очереди. Используй
// indexOf или split для получения правой части сообщения.

fun extractDate(arg: String) {
    val splitString = arg.split(" ")
    val findTime = splitString.last()
    val findDate = splitString.get(splitString.size - 2)
    println(findTime)
    println(findDate)
}
//
//3. Маскирование личных данных
//Дана строка с номером кредитной карты, например "4539 1488 0343 6467". Замаскируйте все цифры, кроме последних четырех,
// символами "*".

fun maskCard(arg: String) {
    println("**** **** **** ${arg.substring(arg.lastIndexOf(" ") + 1)}")
}

//
//4. Форматирование адреса электронной почты.
//У вас есть электронный адрес, например "username@example.com". Преобразуйте его в строку "username [at] example [dot] com", используя функцию replace()
//
fun formatAdress(email: String) {
    val newAdress = email.replace("@", " [at] ")
        .replace(".", " [dot] ")
    println(newAdress)
}

//5. Извлечение имени файла из пути.
//Дан путь к файлу, например "C:/Пользователи/Документы/report.txt" или "D:/good.themes/dracula.theme" (может быть любым).
// Извлеките название файла с расширением.
//
fun extractFileName(path: String) {
    val splitString = path.split("/")
    val extractName = splitString.get(splitString.size-1)
    println(extractName)
}

//6. Создание аббревиатуры из фразы.
//У вас есть фраза, например "Котлин лучший язык программирования" (может быть любой с разделителями слов - пробел).
// Создайте аббревиатуру из начальных букв слов (например, "ООП").
//
//Используйте split. Используйте for для перебора слов. Используйте var переменную для накопления первых букв.
fun createAbbriviation(arg: String) {
    val splitString = arg.split(" ")
    var newString = ""
    for (char in splitString) {
        newString += char.first().toString().uppercase()
    }
    println(newString)
}